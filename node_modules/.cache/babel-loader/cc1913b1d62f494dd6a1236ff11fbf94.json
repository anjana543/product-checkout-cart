{"ast":null,"code":"import _toConsumableArray from\"C:/Projects/checkout-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Projects/checkout-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Projects/checkout-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import styles from\"./Checkout.module.css\";import{LoadingIcon}from\"./Icons\";import{getProducts}from\"./dataService\";import{useEffect,useState}from\"react\";// You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var DISCOUNT_PRICE=10;var MAX_ORDER_PRICE=1000;var calculatePriceBasedOnQty=function calculatePriceBasedOnQty(item){return(item===null||item===void 0?void 0:item.qty)?(item===null||item===void 0?void 0:item.qty)*item.price:0;};var calculateDiscount=function calculateDiscount(value){return value>MAX_ORDER_PRICE?value-value*DISCOUNT_PRICE/100:0;};var Product=function Product(props){var item=props.item,onAdd=props.onAdd,onRemove=props.onRemove,cardItems=props.cardItems;var selectedItem=cardItems.find(function(x){return x.id===item.id;});var totalPrice=function totalPrice(){var total=calculatePriceBasedOnQty(selectedItem);var discountPrice=calculateDiscount(total);return discountPrice===0?total:discountPrice;};return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.id}),/*#__PURE__*/_jsx(\"td\",{children:item.name}),/*#__PURE__*/_jsx(\"td\",{children:item.availableCount}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",item.price]}),/*#__PURE__*/_jsx(\"td\",{children:(selectedItem===null||selectedItem===void 0?void 0:selectedItem.qty)||0}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",totalPrice().toFixed(2)]}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return onAdd(item);},className:styles.actionButton,disabled:(selectedItem===null||selectedItem===void 0?void 0:selectedItem.qty)>=item.availableCount,children:\"+\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return onRemove(item);},className:styles.actionButton,disabled:!(selectedItem===null||selectedItem===void 0?void 0:selectedItem.qty)||(selectedItem===null||selectedItem===void 0?void 0:selectedItem.qty)===0,children:\"-\"})]})]});};var Checkout=function Checkout(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),products=_useState2[0],setProducts=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),cardItems=_useState6[0],setCardItems=_useState6[1];useEffect(function(){setLoading(true);getProducts().then(function(response){setLoading(false);setProducts(response);});},[]);var onAdd=function onAdd(product){var isExist=cardItems.find(function(item){return item.id===product.id;});if(isExist){setCardItems(cardItems.map(function(item){return item.id===product.id?_objectSpread(_objectSpread({},isExist),{},{qty:isExist.qty+1}):item;}));}else{setCardItems([].concat(_toConsumableArray(cardItems),[_objectSpread(_objectSpread({},product),{},{qty:1})]));}};var onRemove=function onRemove(product){var isExist=cardItems.find(function(item){return item.id===product.id;});if((isExist===null||isExist===void 0?void 0:isExist.qty)===1){setCardItems(cardItems.filter(function(item){return item.id!==product.id;}));}else{setCardItems(cardItems.map(function(item){return item.id===product.id?_objectSpread(_objectSpread({},isExist),{},{qty:isExist.qty-1}):item;}));}};var totalPrice=cardItems.reduce(function(sum,i){return sum+i.qty*i.price;},0);var discountPrice=cardItems.reduce(function(sum,i){var total=calculatePriceBasedOnQty(i);var discountPrice=calculateDiscount(total);return sum+discountPrice>0?total-discountPrice:0;},0);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"header\",{className:styles.header,children:/*#__PURE__*/_jsx(\"h1\",{children:\"Electro World\"})}),/*#__PURE__*/_jsx(\"main\",{children:loading?/*#__PURE__*/_jsx(LoadingIcon,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"table\",{className:styles.table,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Product ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Product Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"# Available\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Quantity\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total\"}),/*#__PURE__*/_jsx(\"th\",{}),/*#__PURE__*/_jsx(\"th\",{})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:products.map(function(item){return/*#__PURE__*/_jsx(Product,{item:item,cardItems:cardItems,onAdd:onAdd,onRemove:onRemove},item.id);})})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Order summary\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Discount: $ \",discountPrice.toFixed(2)]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total: $\",totalPrice.toFixed(2),\" \"]})]})})]});};export default Checkout;","map":{"version":3,"sources":["C:/Projects/checkout-react/src/Checkout.js"],"names":["styles","LoadingIcon","getProducts","useEffect","useState","DISCOUNT_PRICE","MAX_ORDER_PRICE","calculatePriceBasedOnQty","item","qty","price","calculateDiscount","value","Product","props","onAdd","onRemove","cardItems","selectedItem","find","x","id","totalPrice","total","discountPrice","name","availableCount","toFixed","actionButton","Checkout","products","setProducts","loading","setLoading","setCardItems","then","response","product","isExist","map","filter","reduce","sum","i","header","table"],"mappings":"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","sourcesContent":["import styles from \"./Checkout.module.css\";\nimport { LoadingIcon } from \"./Icons\";\nimport { getProducts } from \"./dataService\";\nimport { useEffect, useState } from \"react\";\n\n// You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\nconst DISCOUNT_PRICE = 10;\nconst MAX_ORDER_PRICE = 1000;\n\nconst calculatePriceBasedOnQty = (item) =>\n  item?.qty ? item?.qty * item.price : 0;\n\nconst calculateDiscount = (value) =>\n  value > MAX_ORDER_PRICE ? value - (value * DISCOUNT_PRICE) / 100 : 0;\n\nconst Product = (props) => {\n  const { item, onAdd, onRemove, cardItems } = props;\n\n  const selectedItem = cardItems.find((x) => x.id === item.id);\n\n  const totalPrice = () => {\n    const total = calculatePriceBasedOnQty(selectedItem);\n    const discountPrice = calculateDiscount(total);\n    return discountPrice === 0 ? total : discountPrice;\n  };\n\n  return (\n    <tr>\n      <td>{item.id}</td>\n      <td>{item.name}</td>\n      <td>{item.availableCount}</td>\n      <td>${item.price}</td>\n      <td>{selectedItem?.qty || 0}</td>\n      <td>${totalPrice().toFixed(2)}</td>\n      <td>\n        <button\n          onClick={() => onAdd(item)}\n          className={styles.actionButton}\n          disabled={selectedItem?.qty >= item.availableCount}\n        >\n          +\n        </button>\n        <button\n          onClick={() => onRemove(item)}\n          className={styles.actionButton}\n          disabled={!selectedItem?.qty || selectedItem?.qty === 0}\n        >\n          -\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst Checkout = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [cardItems, setCardItems] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n    getProducts().then((response) => {\n      setLoading(false);\n      setProducts(response);\n    });\n  }, []);\n\n  const onAdd = (product) => {\n    const isExist = cardItems.find((item) => item.id === product.id);\n    if (isExist) {\n      setCardItems(\n        cardItems.map((item) => {\n          return item.id === product.id\n            ? { ...isExist, qty: isExist.qty + 1 }\n            : item;\n        })\n      );\n    } else {\n      setCardItems([...cardItems, { ...product, qty: 1 }]);\n    }\n  };\n\n  const onRemove = (product) => {\n    const isExist = cardItems.find((item) => item.id === product.id);\n    if (isExist?.qty === 1) {\n      setCardItems(cardItems.filter((item) => item.id !== product.id));\n    } else {\n      setCardItems(\n        cardItems.map((item) => {\n          return item.id === product.id\n            ? { ...isExist, qty: isExist.qty - 1 }\n            : item;\n        })\n      );\n    }\n  };\n\n  const totalPrice = cardItems.reduce((sum, i) => sum + i.qty * i.price, 0);\n\n  const discountPrice = cardItems.reduce((sum, i) => {\n    const total = calculatePriceBasedOnQty(i);\n    const discountPrice = calculateDiscount(total);\n    return sum + discountPrice > 0 ? total - discountPrice : 0;\n  }, 0);\n\n  return (\n    <div>\n      <header className={styles.header}>\n        <h1>Electro World</h1>\n      </header>\n      <main>\n        {loading ? (\n          <LoadingIcon />\n        ) : (\n          <>\n            <table className={styles.table}>\n              <thead>\n                <tr>\n                  <th>Product ID</th>\n                  <th>Product Name</th>\n                  <th># Available</th>\n                  <th>Price</th>\n                  <th>Quantity</th>\n                  <th>Total</th>\n                  <th></th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {products.map((item) => {\n                  return (\n                    <Product\n                      item={item}\n                      key={item.id}\n                      cardItems={cardItems}\n                      onAdd={onAdd}\n                      onRemove={onRemove}\n                    />\n                  );\n                })}\n              </tbody>\n            </table>\n            <h2>Order summary</h2>\n            <p>Discount: $ {discountPrice.toFixed(2)}</p>\n            <p>Total: ${totalPrice.toFixed(2)} </p>\n          </>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}