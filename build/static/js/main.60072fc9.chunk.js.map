{"version":3,"sources":["Icons.js","dataService.js","Checkout.js","App.js","reportWebVitals.js","index.js","Checkout.module.css"],"names":["LoadingIcon","xmlns","width","height","viewBox","d","getProducts","endpoint","delay","Math","random","Promise","resolve","reject","setTimeout","fetch","then","res","json","getData","result","products","calculatePriceBasedOnQty","item","qty","price","calculateDiscount","value","Product","props","onAdd","onRemove","selectedItem","cardItems","find","x","id","name","availableCount","total","discountPrice","totalPrice","toFixed","onClick","className","styles","actionButton","disabled","Checkout","useState","setProducts","loading","setLoading","setCardItems","useEffect","response","product","isExist","map","filter","reduce","sum","i","header","table","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.60072fc9.chunk.js","sourcesContent":["export const LoadingIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M13.75 22c0 .966-.783 1.75-1.75 1.75s-1.75-.784-1.75-1.75.783-1.75 1.75-1.75 1.75.784 1.75 1.75zm-1.75-22c-1.104 0-2 .896-2 2s.896 2 2 2 2-.896 2-2-.896-2-2-2zm10 10.75c.689 0 1.249.561 1.249 1.25 0 .69-.56 1.25-1.249 1.25-.69 0-1.249-.559-1.249-1.25 0-.689.559-1.25 1.249-1.25zm-22 1.25c0 1.105.896 2 2 2s2-.895 2-2c0-1.104-.896-2-2-2s-2 .896-2 2zm19-8c.551 0 1 .449 1 1 0 .553-.449 1.002-1 1-.551 0-1-.447-1-.998 0-.553.449-1.002 1-1.002zm0 13.5c.828 0 1.5.672 1.5 1.5s-.672 1.501-1.502 1.5c-.826 0-1.498-.671-1.498-1.499 0-.829.672-1.501 1.5-1.501zm-14-14.5c1.104 0 2 .896 2 2s-.896 2-2.001 2c-1.103 0-1.999-.895-1.999-2s.896-2 2-2zm0 14c1.104 0 2 .896 2 2s-.896 2-2.001 2c-1.103 0-1.999-.895-1.999-2s.896-2 2-2z\"/>\n    </svg>\n  );\n}","export function getProducts() {\r\n    return getData('/products.json')\r\n        .then(result => result.products);\r\n}\r\n\r\nfunction getData(endpoint) {\r\n    const delay = (0.5 + Math.random() * 2) * 1000;\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(function () {\r\n            fetch(endpoint)\r\n                .then(res => {\r\n                    resolve(res.json())\r\n                });\r\n        }, delay);\r\n    });\r\n}","import styles from \"./Checkout.module.css\";\nimport { LoadingIcon } from \"./Icons\";\nimport { getProducts } from \"./dataService\";\nimport { useEffect, useState } from \"react\";\n\n// You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\nconst DISCOUNT_PRICE = 10;\nconst MAX_ORDER_PRICE = 1000;\n\nconst calculatePriceBasedOnQty = (item) =>\n  item?.qty ? item?.qty * item.price : 0;\n\nconst calculateDiscount = (value) =>\n  value > MAX_ORDER_PRICE ? value - (value * DISCOUNT_PRICE) / 100 : 0;\n\nconst Product = (props) => {\n  const { item, onAdd, onRemove, cardItems } = props;\n\n  const selectedItem = cardItems.find((x) => x.id === item.id);\n\n  const totalPrice = () => {\n    const total = calculatePriceBasedOnQty(selectedItem);\n    const discountPrice = calculateDiscount(total);\n    return discountPrice === 0 ? total : discountPrice;\n  };\n\n  return (\n    <tr>\n      <td>{item.id}</td>\n      <td>{item.name}</td>\n      <td>{item.availableCount}</td>\n      <td>${item.price}</td>\n      <td>{selectedItem?.qty || 0}</td>\n      <td>${totalPrice().toFixed(2)}</td>\n      <td>\n        <button\n          onClick={() => onAdd(item)}\n          className={styles.actionButton}\n          disabled={selectedItem?.qty >= item.availableCount}\n        >\n          +\n        </button>\n        <button\n          onClick={() => onRemove(item)}\n          className={styles.actionButton}\n          disabled={!selectedItem?.qty || selectedItem?.qty === 0}\n        >\n          -\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst Checkout = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [cardItems, setCardItems] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n    getProducts().then((response) => {\n      setLoading(false);\n      setProducts(response);\n    });\n  }, []);\n\n  const onAdd = (product) => {\n    const isExist = cardItems.find((item) => item.id === product.id);\n    if (isExist) {\n      setCardItems(\n        cardItems.map((item) => {\n          return item.id === product.id\n            ? { ...isExist, qty: isExist.qty + 1 }\n            : item;\n        })\n      );\n    } else {\n      setCardItems([...cardItems, { ...product, qty: 1 }]);\n    }\n  };\n\n  const onRemove = (product) => {\n    const isExist = cardItems.find((item) => item.id === product.id);\n    if (isExist?.qty === 1) {\n      setCardItems(cardItems.filter((item) => item.id !== product.id));\n    } else {\n      setCardItems(\n        cardItems.map((item) => {\n          return item.id === product.id\n            ? { ...isExist, qty: isExist.qty - 1 }\n            : item;\n        })\n      );\n    }\n  };\n\n  const totalPrice = cardItems.reduce((sum, i) => sum + i.qty * i.price, 0);\n\n  const discountPrice = cardItems.reduce((sum, i) => {\n    const total = calculatePriceBasedOnQty(i);\n    const discountPrice = calculateDiscount(total);\n    return sum + discountPrice > 0 ? total - discountPrice : 0;\n  }, 0);\n\n  return (\n    <div>\n      <header className={styles.header}>\n        <h1>Electro World</h1>\n      </header>\n      <main>\n        {loading ? (\n          <LoadingIcon />\n        ) : (\n          <>\n            <table className={styles.table}>\n              <thead>\n                <tr>\n                  <th>Product ID</th>\n                  <th>Product Name</th>\n                  <th># Available</th>\n                  <th>Price</th>\n                  <th>Quantity</th>\n                  <th>Total</th>\n                  <th></th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {products.map((item) => {\n                  return (\n                    <Product\n                      item={item}\n                      key={item.id}\n                      cardItems={cardItems}\n                      onAdd={onAdd}\n                      onRemove={onRemove}\n                    />\n                  );\n                })}\n              </tbody>\n            </table>\n            <h2>Order summary</h2>\n            <p>Discount: $ {discountPrice.toFixed(2)}</p>\n            <p>Total: ${totalPrice.toFixed(2)} </p>\n          </>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default Checkout;\n","import './App.css';\nimport Checkout from './Checkout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Checkout/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Checkout_header__2H0bG\",\"table\":\"Checkout_table__kPXCj\",\"actionButton\":\"Checkout_actionButton__27Ocm\"};"],"sourceRoot":""}